version: '3.1'
services:
    db:
        image: mongo
        restart: always
        networks:
            - db_network # for api reqs
        environment:
            MONGO_INITDB_ROOT_USERNAME: $DB_USERNAME
            MONGO_INITDB_ROOT_PASSWORD: $DB_PASSWORD
            MONGO_INITDB_DATABASE: $MONGO_INITDB_DATABASE
        volumes:
            - db_vol:/data/db

    db_interface:
        image: mongo-express
        restart: always
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: $DB_USERNAME
            ME_CONFIG_MONGODB_ADMINPASSWORD: $DB_PASSWORD
            ME_CONFIG_SITE_BASEURL: /db_interface/
            ME_CONFIG_MONGODB_SERVER: db
        networks:
            - db_network # for db
            - web_network # for interface
        depends_on:
            - db

    backend:
        build: ./backend
        command: --log-level debug
        restart: always
        volumes:
            - ./backend:/app
        environment:
            PORT: 5000
            DEBUG: $DEBUG
            SECRET_KEY: $SECRET_KEY
            DATABASE_URL: $DATABASE_URL
        depends_on:
            - db
        networks:
            - db_network
            - web_network

    frontend:
        build:
            context: ./frontend
            args:
                DEBUG: $DEBUG
                NODE_ENV: $NODE_ENV
        entrypoint: ./entrypoint.sh
        restart: unless-stopped
        volumes:
            - web-root:/home/node/app/dist
            - ./frontend:/home/node/app
            - /home/node/app/node_modules
        environment:
            NODE_ENV: $NODE_ENV
            PORT: 8080
            DEBUG: $DEBUG
        depends_on:
            - backend
        networks:
            - web_network

    nginx:
        image: nginx:latest
        ports:
            - 8000:80
        volumes:
            - web-root:/var/www/html
            - ./config/nginx:/etc/nginx/conf.d/
        depends_on:
            - frontend
            - backend
            - db_interface
        networks:
            - web_network

networks:
    web_network:
        driver: bridge
    db_network:
        driver: bridge

volumes:
    web-root:
    db_vol:
